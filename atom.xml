<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Duc Ninja</title>
  
  <subtitle>I&#39;m an developer and a ninja also.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://duc.ninja/"/>
  <updated>2018-10-14T09:30:30.485Z</updated>
  <id>https://duc.ninja/</id>
  
  <author>
    <name>Duc Ninja</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Under construction!</title>
    <link href="https://duc.ninja/2018/10/14/hello-world/"/>
    <id>https://duc.ninja/2018/10/14/hello-world/</id>
    <published>2018-10-14T09:30:30.485Z</published>
    <updated>2018-10-14T09:30:30.485Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://duc.ninja/">Duc Ninja</a>! This is my very first post.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://duc.ninja/&quot;&gt;Duc Ninja&lt;/a&gt;! This is my very first post.&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Swift 4 - Class only protocol</title>
    <link href="https://duc.ninja/2018/08/17/2018/class-only-protocol/"/>
    <id>https://duc.ninja/2018/08/17/2018/class-only-protocol/</id>
    <published>2018-08-17T01:13:00.000Z</published>
    <updated>2018-10-14T09:50:51.766Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/images/swift4.png" alt=""></p><p>We usually use the <code>class</code> keyword to define a <code>class only protocol</code> in the normal way.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protocol DetailViewControllerDelegate: class &#123;</span><br><span class="line">  func didFinishTask(sender: DetailViewController)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Since Swift 4, we have an other way to define it. Introduced in <a href="https://github.com/apple/swift-evolution/blob/master/proposals/0156-subclass-existentials.md" target="_blank" rel="noopener">0156-subclass-existentials</a></p><blockquote><p>This proposal merges the concepts of class and AnyObject, which now have the same meaning: they represent an existential for classes.</p></blockquote><p>So, it much clearer with the new way:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protocol DetailViewControllerDelegate: AnyObject &#123;</span><br><span class="line">  func didFinishTask(sender: DetailViewController)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Happy coding!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/assets/images/swift4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;We usually use the &lt;code&gt;class&lt;/code&gt; keyword to define a &lt;code&gt;class only protocol&lt;/
      
    
    </summary>
    
    
  </entry>
  
</feed>
